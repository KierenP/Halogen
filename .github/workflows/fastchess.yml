name: FastChess

# This workflow will play games with a debug enabled Halogen

on: 
  push:
    branches:
      - master
  pull_request:

jobs:
  FastChess:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        target: [sanitize-address, sanitize-undefined, sanitize-thread]

    steps:
      - name: Checkout Halogen repo 
        uses: actions/checkout@v4.1.1
        with:
          path: Halogen

      - name: Build
        working-directory: Halogen/src
        run: make ${{ matrix.target }} EXE=../bin/Halogen -j

      - name: Checkout fast-chess repo
        uses: actions/checkout@v4.1.1
        with:
          repository: Disservin/fast-chess
          path: fast-chess
          ref: d54af1910d5479c669dc731f1f54f9108a251951

      - name: fast-chess build
        working-directory: fast-chess
        run: make -j

      - name: Run games (Blitz)
        working-directory: fast-chess
        run: |
          export TSAN_OPTIONS="suppressions=../Halogen/src/test/tsan.supp"
          ./fast-chess -rounds 1 -openings file=app/tests/data/openings.epd format=epd order=random -srand $RANDOM\
               -engine name=halogen1 cmd=../Halogen/bin/Halogen\
               -engine name=halogen2 cmd=../Halogen/bin/Halogen\
               -ratinginterval 1 -report penta=true -each proto=uci tc=10+0.1 option.Threads=4 -log file=fast.log | tee fast.out
          cat fast.log
          if grep -q "ThreadSanitizer" fast.log; then
            echo "ERROR: ThreadSanitizer found"
            exit 1
          fi
          if grep -q "Assertion" fast.log; then
            echo "ERROR: Assertion found"
            exit 1
          fi

          if grep -q "disconnect" fast.out; then
            echo "ERROR: disconnect found"
            exit 1
          fi

      # no opening for this one to test 'position startpos moves ...'
      - name: Run games (Cyclical)
        working-directory: fast-chess
        run: |
          export TSAN_OPTIONS="suppressions=../Halogen/src/test/tsan.supp"
          ./fast-chess -rounds 1 -openings\
               -engine name=halogen1 cmd=../Halogen/bin/Halogen\
               -engine name=halogen2 cmd=../Halogen/bin/Halogen\
               -ratinginterval 1 -report penta=true -each proto=uci tc=40/10 option.Threads=4 -log file=fast.log | tee fast.out
          cat fast.log
          if grep -q "ThreadSanitizer" fast.log; then
            echo "ERROR: ThreadSanitizer found"
            exit 1
          fi
          if grep -q "Assertion" fast.log; then
            echo "ERROR: Assertion found"
            exit 1
          fi

          if grep -q "disconnect" fast.out; then
            echo "ERROR: disconnect found"
            exit 1
          fi

      - name: Run games (FRC)
        working-directory: fast-chess
        run: |
          export TSAN_OPTIONS="suppressions=../Halogen/src/test/tsan.supp"
          echo "bqnb1rkr/pp3ppp/3ppn2/2p5/5P2/P2P4/NPP1P1PP/BQ1BNRKR w KQkq - 2 9" > opening.epd
          ./fast-chess -variant fischerandom -rounds 1 -openings file=opening.epd format=epd order=random -srand $RANDOM\
               -engine name=halogen1 cmd=../Halogen/bin/Halogen\
               -engine name=halogen2 cmd=../Halogen/bin/Halogen\
               -ratinginterval 1 -report penta=true -each proto=uci tc=40/10 option.Threads=4 -log file=fast.log | tee fast.out
          cat fast.log
          if grep -q "ThreadSanitizer" fast.log; then
            echo "ERROR: ThreadSanitizer found"
            exit 1
          fi
          if grep -q "Assertion" fast.log; then
            echo "ERROR: Assertion found"
            exit 1
          fi
          if grep -q "disconnect" fast.out; then
            echo "ERROR: disconnect found"
            exit 1
          fi

      - name: cache syzygy
        id: cache-syzygy
        uses: actions/cache@v4
        with:
           path: |
              matetrack/3-4-5-wdl/
              matetrack/3-4-5-dtz/
           key: key-syzygy

      - name: download syzygy 3-4-5 if needed
        working-directory: matetrack
        if: steps.cache-syzygy.outputs.cache-hit != 'true'
        run: |
          wget --no-verbose -r -nH --cut-dirs=2 --no-parent --reject="index.html*" -e robots=off https://tablebase.lichess.ovh/tables/standard/3-4-5-wdl/
          wget --no-verbose -r -nH --cut-dirs=2 --no-parent --reject="index.html*" -e robots=off https://tablebase.lichess.ovh/tables/standard/3-4-5-dtz/

      - name: TB win
        working-directory: Halogen
        run: |
          export TSAN_OPTIONS="suppressions=../Halogen/src/test/tsan.supp"
          ./bin/Halogen "setoption name SyzygyPath value 3-4-5-wdl/:3-4-5-dtz/" "position fen 3k4/8/8/3K4/8/8/5Q2/8 w - - 0 1" "setoption name MultiPV value 4" "go movetime 5000" 2>&1 | tee out.log
          if grep -q "ThreadSanitizer" out.log; then
            echo "ERROR: ThreadSanitizer found"
            exit 1
          fi
          if grep -q "Assertion" out.log; then
            echo "ERROR: Assertion found"
            exit 1
          fi

      - name: TB loss
        working-directory: Halogen
        run: |
          export TSAN_OPTIONS="suppressions=../Halogen/src/test/tsan.supp"
          ./bin/Halogen "setoption name SyzygyPath value 3-4-5-wdl/:3-4-5-dtz/" "position fen 3k4/8/8/3K4/8/8/5Q2/8 b - - 0 1" "setoption name MultiPV value 4" "go movetime 5000" 2>&1 | tee out.log
          if grep -q "ThreadSanitizer" out.log; then
            echo "ERROR: ThreadSanitizer found"
            exit 1
          fi
          if grep -q "Assertion" out.log; then
            echo "ERROR: Assertion found"
            exit 1
          fi

      - name: TB draw
        working-directory: Halogen
        run: |
          export TSAN_OPTIONS="suppressions=../Halogen/src/test/tsan.supp"
          ./bin/Halogen "setoption name SyzygyPath value 3-4-5-wdl/:3-4-5-dtz/" "position fen 3kq3/8/8/3K4/8/8/5Q2/8 w - - 0 1" "setoption name MultiPV value 4" "go movetime 5000" 2>&1 | tee out.log
          if grep -q "ThreadSanitizer" out.log; then
            echo "ERROR: ThreadSanitizer found"
            exit 1
          fi
          if grep -q "Assertion" out.log; then
            echo "ERROR: Assertion found"
            exit 1
          fi

      - name: TB cursed win
        working-directory: Halogen
        run: |
          export TSAN_OPTIONS="suppressions=../Halogen/src/test/tsan.supp"
          ./bin/Halogen "setoption name SyzygyPath value 3-4-5-wdl/:3-4-5-dtz/" "position fen K7/N7/k7/8/3p4/8/N7/8 w - - 0 1" "setoption name MultiPV value 4" "go movetime 5000" 2>&1 | tee out.log
          if grep -q "ThreadSanitizer" out.log; then
            echo "ERROR: ThreadSanitizer found"
            exit 1
          fi
          if grep -q "Assertion" out.log; then
            echo "ERROR: Assertion found"
            exit 1
          fi

      - name: TB blessed loss
        working-directory: Halogen
        run: |
          export TSAN_OPTIONS="suppressions=../Halogen/src/test/tsan.supp"
          ./bin/Halogen "setoption name SyzygyPath value 3-4-5-wdl/:3-4-5-dtz/" "position fen K7/2k5/8/1N6/3p4/3N4/8/8 b - - 0 1" "setoption name MultiPV value 4" "go movetime 5000" 2>&1 | tee out.log
          if grep -q "ThreadSanitizer" out.log; then
            echo "ERROR: ThreadSanitizer found"
            exit 1
          fi
          if grep -q "Assertion" out.log; then
            echo "ERROR: Assertion found"
            exit 1
          fi

      - name: Max search depth
        working-directory: Halogen
        run: |
          export TSAN_OPTIONS="suppressions=../Halogen/src/test/tsan.supp"
          ./bin/Halogen "position fen 8/8/8/8/3k4/1p2p2p/1P2P2P/3K4 w - - 0 1" "go movetime 5000" 2>&1 | tee out.log
          if grep -q "ThreadSanitizer" out.log; then
            echo "ERROR: ThreadSanitizer found"
            exit 1
          fi
          if grep -q "Assertion" out.log; then
            echo "ERROR: Assertion found"
            exit 1
          fi