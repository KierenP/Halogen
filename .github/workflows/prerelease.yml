name: Prerelease

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Build and Verify
    strategy:
      matrix:
        arch: [ legacy, sse4, avx, avx2, avx2-pext, avx512, avx512vnni ]
        os: [ ubuntu-latest, windows-latest ]
        include:
          - os: windows-latest
            extension: .exe

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

      # latest available GCC versions on each platform
    - if: matrix.os == 'ubuntu-latest'
      name: Install GCC 14 (Ubuntu)
      run: |
        sudo apt install gcc-14 g++-14 -y

    - if: matrix.os == 'windows-latest'
      name: Install GCC 13 (Windows)
      run: |
        choco install mingw --version=13.2.0

    - if: matrix.os == 'ubuntu-latest'
      name: Set CC and CXX for Linux
      run: |
        echo "CC=gcc-14" >> $GITHUB_ENV
        echo "CXX=g++-14" >> $GITHUB_ENV
    - if: matrix.os == 'windows-latest'
      name: Set CC and CXX for Windows
      shell: powershell
      run: |
        echo "CC=gcc" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "CXX=g++" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Build
      working-directory: src
      run: make ${{ matrix.arch }} EXE=../build/Halogen${{ matrix.extension }} -j

    - name: Rename Binary
      run: |
        mv ${{ github.workspace }}/build/Halogen${{ matrix.extension }} ${{ github.workspace }}/Halogen-${{ env.VERSION }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}

    # only avx2 and below supported on github runners
    - if: matrix.arch != 'avx512vnni' && matrix.arch != 'avx512'
      name: Verify
      run: |
        cd bin
        commit_bench=$(git show --summary | grep -o "Bench: [0-9]*" | awk '{ print $NF }')
        actual_bench=$(${{ github.workspace }}/Halogen-${{ env.VERSION }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }} bench | tail -1 | grep -o "^[0-9]*")
        if [[ "$actual_bench" != "$commit_bench" ]]; then echo "Incorrect bench, got '$actual_bench' expected '$commit_bench'" && exit 1; else echo "Got correct bench $actual_bench"; fi

    - name: Upload Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/Halogen-${{ env.VERSION }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}
        asset_name: Halogen-${{ env.VERSION }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}
        asset_content_type: application/zip